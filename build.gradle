buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
    }
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'

group 'at.karriere.gradle.plugins'
version '1.3.0'

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:2.5.0"
    testCompile 'org.mockito:mockito-core:2.4.0'
}


repositories {
    jcenter()
}

jar {
    manifest {
        attributes('Implementation-Title': 'karriere.at Version Plugin',
                'Implementation-Version': version)
    }
}

pluginBundle {
    website = 'https://github.com/karriereat/gradle-version-plugin'
    vcsUrl = 'https://github.com/karriereat/gradle-version-plugin'
    description = 'The karriere.at version plugin for automatic versioning.'
    tags = ['version', 'versioning']

    plugins {
        versionPlugin {
            id = 'at.karriere.version'
            displayName = 'karriere.at Version Plugin'
            description = 'A plugin developed by karriere.at that handles your versioning automatically.'
        }
    }
}

task setupPluginUpload {
    doLast {
        def key = System.env.gradlePublishKey
        def secret = System.env.gradlePublishSecret

        if (!key || !secret) {
            throw new RuntimeException("gradlePublishKey and/or gradlePublishSecret are not defined environment variables")
        }

        System.properties.setProperty("gradle.publish.key", key)
        System.properties.setProperty("gradle.publish.secret", secret)
    }
}

tasks.publishPlugins.dependsOn tasks.setupPluginUpload



